aLKsNypV53OJunlx

timeout = 2000


kubectl delete <resource_type> <resource_name> -n <namespace> --grace-period=0 --force

kubectl get crd | grep "monitoring.coreos.com" | awk '{print $1}' | xargs kubectl delete


 "kubernetes.io/cluster/my-cluster"      = "shared"
    "kubernetes.io/role/elb"                 = "1"
    "Name"                                    = "public-subnet-1"
    "Environment"                             = "dev"
    "Project"                                 = "my-app"
    "Cost Center"                             = "12345"


helm status argocd -n argocd

kubectl get serviceaccount aws-load-balancer-controller -n kube-system -o yaml

eksctl create iamserviceaccount \
--cluster=mycluster \
--namespace=kube-system \
--name=aws-load-balancer-controller \
--attach-policy-arn=arn:aws:iam::608782704145:policy/AWSLoadBalancerControllerIAMPolicy \
--override-existing-serviceaccounts \
--region us-east-1 \
--approve

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "Federated": "arn:aws:iam::608782704145:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/C049CCA9C6810424D8D67FCBBF922B76"
            },
            "Action": "sts:AssumeRoleWithWebIdentity",
            "Condition": {
                "StringEquals": {
                    "oidc.eks.us-east-1.amazonaws.com/id/C049CCA9C6810424D8D67FCBBF922B76:aud": "sts.amazonaws.com",
                    "oidc.eks.us-east-1.amazonaws.com/id/C049CCA9C6810424D8D67FCBBF922B76:sub": "system:serviceaccount:kube-system:aws-load-balancer-controller"
                }
            }
        }
    ]
}
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "Federated": "arn:aws:iam::608782704145:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/C049CCA9C6810424D8D67FCBBF922B76"
            },
            "Action": "sts:AssumeRoleWithWebIdentity",
            "Condition": {
                "StringEquals": {
                    "oidc.eks.us-east-1.amazonaws.com/id/C049CCA9C6810424D8D67FCBBF922B76:sub": "system:serviceaccount:kube-system:aws-load-balancer-controller"
                }
            }
        }
    ]
}


=========================================
ubuntu@ip-10-100-2-211:~$ kubectl get serviceaccount argocd-server -n argocd -o yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd"}}
    meta.helm.sh/release-name: argocd
    meta.helm.sh/release-namespace: argocd
  creationTimestamp: "2024-10-01T08:43:59Z"
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.12.4
    helm.sh/chart: argo-cd-7.6.7
  name: argocd-server
  namespace: argocd
  resourceVersion: "38423"
  uid: e41e784b-8bf5-4778-9ab3-3d5dc32d861f
ubuntu@ip-10-100-2-211:~$ kubectl describe service/argocd-server  -n argocd
Name:                     argocd-server
Namespace:                argocd
Labels:                   app.kubernetes.io/component=server
                          app.kubernetes.io/instance=argocd
                          app.kubernetes.io/managed-by=Helm
                          app.kubernetes.io/name=argocd-server
                          app.kubernetes.io/part-of=argocd
                          app.kubernetes.io/version=v2.12.4
                          helm.sh/chart=argo-cd-7.6.7
Annotations:              meta.helm.sh/release-name: argocd
                          meta.helm.sh/release-namespace: argocd
Selector:                 app.kubernetes.io/instance=argocd,app.kubernetes.io/name=argocd-server
Type:                     LoadBalancer
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       172.20.217.127
IPs:                      172.20.217.127
Port:                     http  80/TCP
TargetPort:               8080/TCP
NodePort:                 http  31607/TCP
Endpoints:                10.100.3.46:8080
Port:                     https  443/TCP
TargetPort:               8080/TCP
NodePort:                 https  30435/TCP
Endpoints:                10.100.3.46:8080
Session Affinity:         None
External Traffic Policy:  Cluster
Events:
  Type     Reason            Age   From     Message
  ----     ------            ----  ----     -------
  Warning  FailedBuildModel  32m   service  Failed build model due to WebIdentityErr: failed to retrieve credentials
caused by: AccessDenied: Not authorized to perform sts:AssumeRoleWithWebIdentity
           status code: 403, request id: 1b5ba630-e39f-4961-b945-6dbbb56e3b8d
  Warning  FailedBuildModel  32m  service  Failed build model due to WebIdentityErr: failed to retrieve credentials
caused by: AccessDenied: Not authorized to perform sts:AssumeRoleWithWebIdentity
           status code: 403, request id: 105c2ccf-0535-4f9d-96b1-2a5333ffa326
  Warning  FailedBuildModel  32m  service  Failed build model due to WebIdentityErr: failed to retrieve credentials
caused by: AccessDenied: Not authorized to perform sts:AssumeRoleWithWebIdentity
           status code: 403, request id: 86bef04b-82c5-40b7-a877-a6a81b3e9a62
  Warning  FailedBuildModel  32m  service  Failed build model due to WebIdentityErr: failed to retrieve credentials
caused by: AccessDenied: Not authorized to perform sts:AssumeRoleWithWebIdentity
           status code: 403, request id: 2ade96a3-b355-47cb-87ef-1515581cc7c3
  Warning  FailedBuildModel  32m  service  Failed build model due to WebIdentityErr: failed to retrieve credentials
caused by: AccessDenied: Not authorized to perform sts:AssumeRoleWithWebIdentity
           status code: 403, request id: 335eff89-2c67-4688-8baa-7ec1d933a908
  Warning  FailedBuildModel  32m  service  Failed build model due to WebIdentityErr: failed to retrieve credentials
caused by: AccessDenied: Not authorized to perform sts:AssumeRoleWithWebIdentity
           status code: 403, request id: 395a3231-8b47-4bbf-bcf8-b09b3a701daa
  Warning  FailedBuildModel  32m  service  Failed build model due to WebIdentityErr: failed to retrieve credentials
caused by: AccessDenied: Not authorized to perform sts:AssumeRoleWithWebIdentity
           status code: 403, request id: dfe06380-df07-432c-a019-3b906979c163
  Warning  FailedBuildModel  32m  service  Failed build model due to WebIdentityErr: failed to retrieve credentials
caused by: AccessDenied: Not authorized to perform sts:AssumeRoleWithWebIdentity
           status code: 403, request id: 2f39d8b4-01fa-4129-a369-c10e785e595c
  Warning  FailedBuildModel  32m  service  Failed build model due to WebIdentityErr: failed to retrieve credentials
caused by: AccessDenied: Not authorized to perform sts:AssumeRoleWithWebIdentity
           status code: 403, request id: 17364e13-0c38-4d73-a64b-f753f31045f1
  Warning  FailedBuildModel  21m (x9 over 32m)  service  (combined from similar events): Failed build model due to unable to resolve at least one subnet (0 match VPC and tags: [kubernetes.io/role/internal-elb])
  Warning  FailedBuildModel  10m                service  Failed build model due to unable to resolve at least one subnet (0 match VPC and tags: [kubernetes.io/role/internal-elb])


==========================================
manually


kubectl describe pod argocd-server-59775fbfb5-2229c -n argocd
Name:             argocd-server-59775fbfb5-2229c
Namespace:        argocd
Priority:         0
Service Account:  argocd-server
Node:             ip-10-100-3-13.ec2.internal/10.100.3.13
Start Time:       Tue, 01 Oct 2024 10:53:46 +0000
Labels:           app.kubernetes.io/name=argocd-server
                  pod-template-hash=59775fbfb5
Annotations:      <none>
Status:           Running
IP:               10.100.3.61
IPs:
  IP:           10.100.3.61
Controlled By:  ReplicaSet/argocd-server-59775fbfb5
Containers:
  argocd-server:
    Container ID:    containerd://a5cae4b1491a8598bd45cd7b7e077224885a7ee4fb7586384b951b2d4d137851
    Image:           quay.io/argoproj/argocd:v2.12.3
    Image ID:        quay.io/argoproj/argocd@sha256:68894064bc381c19ea951029510aa614bd26bf46c2ec65ea445c7d8d095a9417
    Ports:           8080/TCP, 8083/TCP
    Host Ports:      0/TCP, 0/TCP
    SeccompProfile:  RuntimeDefault
    Args:
      /usr/local/bin/argocd-server
    State:          Running
      Started:      Tue, 01 Oct 2024 10:53:47 +0000
    Ready:          True
    Restart Count:  0
    Liveness:       http-get http://:8080/healthz%3Ffull=true delay=3s timeout=5s period=30s #success=1 #failure=3
    Readiness:      http-get http://:8080/healthz delay=3s timeout=1s period=30s #success=1 #failure=3
    Environment:
      REDIS_PASSWORD:                                    <set to the key 'auth' in secret 'argocd-redis'>                                                   Optional: false
      ARGOCD_SERVER_INSECURE:                            <set to the key 'server.insecure' of config map 'argocd-cmd-params-cm'>                            Optional: true
      ARGOCD_SERVER_BASEHREF:                            <set to the key 'server.basehref' of config map 'argocd-cmd-params-cm'>                            Optional: true
      ARGOCD_SERVER_ROOTPATH:                            <set to the key 'server.rootpath' of config map 'argocd-cmd-params-cm'>                            Optional: true
      ARGOCD_SERVER_LOGFORMAT:                           <set to the key 'server.log.format' of config map 'argocd-cmd-params-cm'>                          Optional: true
      ARGOCD_SERVER_LOG_LEVEL:                           <set to the key 'server.log.level' of config map 'argocd-cmd-params-cm'>                           Optional: true
      ARGOCD_SERVER_REPO_SERVER:                         <set to the key 'repo.server' of config map 'argocd-cmd-params-cm'>                                Optional: true
      ARGOCD_SERVER_DEX_SERVER:                          <set to the key 'server.dex.server' of config map 'argocd-cmd-params-cm'>                          Optional: true
      ARGOCD_SERVER_DISABLE_AUTH:                        <set to the key 'server.disable.auth' of config map 'argocd-cmd-params-cm'>                        Optional: true
      ARGOCD_SERVER_ENABLE_GZIP:                         <set to the key 'server.enable.gzip' of config map 'argocd-cmd-params-cm'>                         Optional: true
      ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS:         <set to the key 'server.repo.server.timeout.seconds' of config map 'argocd-cmd-params-cm'>         Optional: true
      ARGOCD_SERVER_X_FRAME_OPTIONS:                     <set to the key 'server.x.frame.options' of config map 'argocd-cmd-params-cm'>                     Optional: true
      ARGOCD_SERVER_CONTENT_SECURITY_POLICY:             <set to the key 'server.content.security.policy' of config map 'argocd-cmd-params-cm'>             Optional: true
      ARGOCD_SERVER_REPO_SERVER_PLAINTEXT:               <set to the key 'server.repo.server.plaintext' of config map 'argocd-cmd-params-cm'>               Optional: true
      ARGOCD_SERVER_REPO_SERVER_STRICT_TLS:              <set to the key 'server.repo.server.strict.tls' of config map 'argocd-cmd-params-cm'>              Optional: true
      ARGOCD_SERVER_DEX_SERVER_PLAINTEXT:                <set to the key 'server.dex.server.plaintext' of config map 'argocd-cmd-params-cm'>                Optional: true
      ARGOCD_SERVER_DEX_SERVER_STRICT_TLS:               <set to the key 'server.dex.server.strict.tls' of config map 'argocd-cmd-params-cm'>               Optional: true
      ARGOCD_TLS_MIN_VERSION:                            <set to the key 'server.tls.minversion' of config map 'argocd-cmd-params-cm'>                      Optional: true
      ARGOCD_TLS_MAX_VERSION:                            <set to the key 'server.tls.maxversion' of config map 'argocd-cmd-params-cm'>                      Optional: true
      ARGOCD_TLS_CIPHERS:                                <set to the key 'server.tls.ciphers' of config map 'argocd-cmd-params-cm'>                         Optional: true
      ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION:  <set to the key 'server.connection.status.cache.expiration' of config map 'argocd-cmd-params-cm'>  Optional: true
      ARGOCD_SERVER_OIDC_CACHE_EXPIRATION:               <set to the key 'server.oidc.cache.expiration' of config map 'argocd-cmd-params-cm'>               Optional: true
      ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION:           <set to the key 'server.login.attempts.expiration' of config map 'argocd-cmd-params-cm'>           Optional: true
      ARGOCD_SERVER_STATIC_ASSETS:                       <set to the key 'server.staticassets' of config map 'argocd-cmd-params-cm'>                        Optional: true
      ARGOCD_APP_STATE_CACHE_EXPIRATION:                 <set to the key 'server.app.state.cache.expiration' of config map 'argocd-cmd-params-cm'>          Optional: true
      REDIS_SERVER:                                      <set to the key 'redis.server' of config map 'argocd-cmd-params-cm'>                               Optional: true
      REDIS_COMPRESSION:                                 <set to the key 'redis.compression' of config map 'argocd-cmd-params-cm'>                          Optional: true
      REDISDB:                                           <set to the key 'redis.db' of config map 'argocd-cmd-params-cm'>                                   Optional: true
      ARGOCD_DEFAULT_CACHE_EXPIRATION:                   <set to the key 'server.default.cache.expiration' of config map 'argocd-cmd-params-cm'>            Optional: true
      ARGOCD_MAX_COOKIE_NUMBER:                          <set to the key 'server.http.cookie.maxnumber' of config map 'argocd-cmd-params-cm'>               Optional: true
      ARGOCD_SERVER_LISTEN_ADDRESS:                      <set to the key 'server.listen.address' of config map 'argocd-cmd-params-cm'>                      Optional: true
      ARGOCD_SERVER_METRICS_LISTEN_ADDRESS:              <set to the key 'server.metrics.listen.address' of config map 'argocd-cmd-params-cm'>              Optional: true
      ARGOCD_SERVER_OTLP_ADDRESS:                        <set to the key 'otlp.address' of config map 'argocd-cmd-params-cm'>                               Optional: true
      ARGOCD_SERVER_OTLP_INSECURE:                       <set to the key 'otlp.insecure' of config map 'argocd-cmd-params-cm'>                              Optional: true
      ARGOCD_SERVER_OTLP_HEADERS:                        <set to the key 'otlp.headers' of config map 'argocd-cmd-params-cm'>                               Optional: true
      ARGOCD_APPLICATION_NAMESPACES:                     <set to the key 'application.namespaces' of config map 'argocd-cmd-params-cm'>                     Optional: true
      ARGOCD_SERVER_ENABLE_PROXY_EXTENSION:              <set to the key 'server.enable.proxy.extension' of config map 'argocd-cmd-params-cm'>              Optional: true
      ARGOCD_K8SCLIENT_RETRY_MAX:                        <set to the key 'server.k8sclient.retry.max' of config map 'argocd-cmd-params-cm'>                 Optional: true
      ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF:               <set to the key 'server.k8sclient.retry.base.backoff' of config map 'argocd-cmd-params-cm'>        Optional: true
      ARGOCD_API_CONTENT_TYPES:                          <set to the key 'server.api.content.types' of config map 'argocd-cmd-params-cm'>                   Optional: true
    Mounts:
      /app/config/dex/tls from argocd-dex-server-tls (rw)
      /app/config/server/tls from argocd-repo-server-tls (rw)
      /app/config/ssh from ssh-known-hosts (rw)
      /app/config/tls from tls-certs (rw)
      /home/argocd from plugins-home (rw)
      /tmp from tmp (rw)
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-6zbwd (ro)
Conditions:
  Type                        Status
  PodReadyToStartContainers   True
  Initialized                 True
  Ready                       True
  ContainersReady             True
  PodScheduled                True
Volumes:
  plugins-home:
    Type:       EmptyDir (a temporary directory that shares a pod's lifetime)
    Medium:
    SizeLimit:  <unset>
  tmp:
    Type:       EmptyDir (a temporary directory that shares a pod's lifetime)
    Medium:
    SizeLimit:  <unset>
  ssh-known-hosts:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      argocd-ssh-known-hosts-cm
    Optional:  false
  tls-certs:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      argocd-tls-certs-cm
    Optional:  false
  argocd-repo-server-tls:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  argocd-repo-server-tls
    Optional:    true
  argocd-dex-server-tls:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  argocd-dex-server-tls
    Optional:    true
  kube-api-access-6zbwd:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  15m   default-scheduler  Successfully assigned argocd/argocd-server-59775fbfb5-2229c to ip-10-100-3-13.ec2.internal
  Normal  Pulling    15m   kubelet            Pulling image "quay.io/argoproj/argocd:v2.12.3"
  Normal  Pulled     15m   kubelet            Successfully pulled image "quay.io/argoproj/argocd:v2.12.3" in 191ms (191ms including waiting)
  Normal  Created    15m   kubelet            Created container argocd-server
  Normal  Started    15m   kubelet            Started container argocd-server



kubectl get serviceaccount argocd-server -n argocd -o yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd"}}
    meta.helm.sh/release-name: argocd
    meta.helm.sh/release-namespace: argocd
  creationTimestamp: "2024-10-01T08:43:59Z"
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.12.4
    helm.sh/chart: argo-cd-7.6.7
  name: argocd-server
  namespace: argocd
  resourceVersion: "38423"
  uid: e41e784b-8bf5-4778-9ab3-3d5dc32d861f



 kubectl describe service/argocd-server  -n argocd
Name:                     argocd-server
Namespace:                argocd
Labels:                   app.kubernetes.io/component=server
                          app.kubernetes.io/name=argocd-server
                          app.kubernetes.io/part-of=argocd
Annotations:              <none>
Selector:                 app.kubernetes.io/name=argocd-server
Type:                     LoadBalancer
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       172.20.172.241
IPs:                      172.20.172.241
LoadBalancer Ingress:     ae8e2b474557d49718c9eff7678c9f7f-1130517370.us-east-1.elb.amazonaws.com
Port:                     http  80/TCP
TargetPort:               8080/TCP
NodePort:                 http  32143/TCP
Endpoints:                10.100.3.61:8080
Port:                     https  443/TCP
TargetPort:               8080/TCP
NodePort:                 https  30515/TCP
Endpoints:                10.100.3.61:8080
Session Affinity:         None
External Traffic Policy:  Cluster
Events:
  Type    Reason                Age   From                Message
  ----    ------                ----  ----                -------
  Normal  Type                  22m   service-controller  ClusterIP -> LoadBalancer
  Normal  EnsuringLoadBalancer  22m   service-controller  Ensuring load balancer
  Normal  EnsuredLoadBalancer   22m   service-controller  Ensured load balancer




